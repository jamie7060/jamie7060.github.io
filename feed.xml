<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://soonjune.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://soonjune.github.io/" rel="alternate" type="text/html" /><updated>2020-08-11T23:15:58+09:00</updated><id>https://soonjune.github.io/</id><title type="html">Seung Joon’s Blog</title><subtitle>Personal Blog of Park Seung Joon</subtitle><entry><title type="html">2. Matrix Algebra (2)</title><link href="https://soonjune.github.io/Matrix-Algebra-1" rel="alternate" type="text/html" title="2. Matrix Algebra (2)" /><published>2020-08-11T22:00:00+09:00</published><updated>2020-08-11T22:00:00+09:00</updated><id>https://soonjune.github.io/Matrix-Algebra-1</id><content type="html" xml:base="https://soonjune.github.io/Matrix-Algebra-1">&lt;p&gt;선형대수 공부 3일차 - 행렬에 대해 알아보자&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;
&lt;/script&gt;

&lt;h2 id=&quot;21-matrix-operations&quot;&gt;2.1 Matrix Operations&lt;/h2&gt;
&lt;h3 id=&quot;theorem-1&quot;&gt;Theorem 1&lt;/h3&gt;
&lt;p&gt;덧셈, 뺄셈, scalar multiple은 교환, 결합, 분배 법칙이 성립한다.&lt;/p&gt;

&lt;p&gt;행렬의 곱셈은 조금 다른데, linear transformation, function으로 이해할 수 있다.  &lt;br /&gt;
따라서 곱할 수록 span을 작아진다. 즉, span(A)가 span(AB)를 포함한다.&lt;/p&gt;
&lt;h3 id=&quot;theorem-2&quot;&gt;Theorem 2&lt;/h3&gt;
&lt;p&gt;곱셈은 결합법칙, 오른쪽/왼쪽 분배 법칙이 성립하나 교환법칙은 성립하지 않는다. 즉, AB와 BA는 같지 않을 수 있다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Powers of a Matrix  &lt;br /&gt;
A가 &lt;script type=&quot;math/tex&quot;&gt;nXn&lt;/script&gt; 행렬이라면 &lt;script type=&quot;math/tex&quot;&gt;A^n&lt;/script&gt;과 같이 행렬의 거듭제곱을 정의할 수 있다. &lt;script type=&quot;math/tex&quot;&gt;A^0 = I&lt;/script&gt;로 정의한다.&lt;/li&gt;
  &lt;li&gt;Transpose  &lt;br /&gt;
행렬의 열과 행을 뒤바꾼 것이라 보면 된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a. &lt;script type=&quot;math/tex&quot;&gt;(A^T)^T = A&lt;/script&gt;    &lt;br /&gt;
b. &lt;script type=&quot;math/tex&quot;&gt;(A + B)^T = A^T + B^T&lt;/script&gt;   &lt;br /&gt;
c. For any scalar &lt;script type=&quot;math/tex&quot;&gt;r, (rA)^T = rA^T&lt;/script&gt;   &lt;br /&gt;
d. &lt;script type=&quot;math/tex&quot;&gt;(AB)^T = B^TA^T&lt;/script&gt;&lt;/p&gt;

&lt;h2 id=&quot;22-the-inverse-of-a-matrix&quot;&gt;2.2 The Inverse of a Matrix&lt;/h2&gt;
&lt;h3 id=&quot;theorem-4&quot;&gt;Theorem 4&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_2_%C3%97_2_matrices&quot;&gt;2X2 행렬의 역행렬 공식&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;theorem-5&quot;&gt;Theorem 5&lt;/h3&gt;
&lt;p&gt;Ax = b이고 A가 역행렬이 존재하면 하나의 유일해 &lt;script type=&quot;math/tex&quot;&gt;x=A^{-1}b&lt;/script&gt;를 지닌다.&lt;/p&gt;

&lt;p&gt;참고) at least 1 solution &lt;script type=&quot;math/tex&quot;&gt;% &lt;![CDATA[
&lt;=&gt; %]]&gt;&lt;/script&gt; no free variable&lt;/p&gt;
&lt;h3 id=&quot;theorem-6&quot;&gt;Theorem 6&lt;/h3&gt;
&lt;p&gt;a. &lt;script type=&quot;math/tex&quot;&gt;(A^{-1})^{-1} = A&lt;/script&gt;   &lt;br /&gt;
b. &lt;script type=&quot;math/tex&quot;&gt;(AB)^{-1} = B^{-1}A{-1}&lt;/script&gt;   &lt;br /&gt;
c. &lt;script type=&quot;math/tex&quot;&gt;(A^T)^{-1} = (A^{-1})^T&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&quot;theorem-7&quot;&gt;Theorem 7&lt;/h3&gt;
&lt;p&gt;nXn 행렬이 &lt;script type=&quot;math/tex&quot;&gt;I_n&lt;/script&gt;과 row equivalent, 즉 echelon row reduction을 통해 &lt;script type=&quot;math/tex&quot;&gt;I&lt;/script&gt;로 만들 수 있다면 역행렬이 존재한다.  &lt;br /&gt;
&lt;script type=&quot;math/tex&quot;&gt;[A|I]&lt;/script&gt; -&amp;gt; &lt;script type=&quot;math/tex&quot;&gt;[I|C]&lt;/script&gt;로 row reduction을 거치면 C가 역행렬이다.&lt;/p&gt;

&lt;h2 id=&quot;23-characterizations-of-invertible-matrices&quot;&gt;2.3 Characterizations of Invertible Matrices&lt;/h2&gt;
&lt;h3 id=&quot;theorem-8&quot;&gt;Theorem 8&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/YUK4bQv.png&quot; align=&quot;center&quot; sytle=&quot;height: 100px;&quot; /&gt;&lt;/p&gt;
&lt;div&gt;
&lt;img src=&quot;https://i.imgur.com/ulOSO1I.png&quot; align=&quot;left&quot; /&gt;
&lt;img src=&quot;https://i.imgur.com/AwTwn4T.png&quot; align=&quot;right&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;위와 같은 조건을 하나만 만족해도 역행렬이 존재하고 하나만 위배해도 역행렬이 존재하지 않는다. 마치 고리와 같이 상호 연결되어 있고 증명과정도 하나 하나 연결하면서 확인할 수 있다.&lt;/p&gt;</content><author><name>Park Seung Joon</name></author><category term="linear-algebra" /><category term="math" /><summary type="html">선형대수 공부 3일차 - 행렬에 대해 알아보자</summary></entry><entry><title type="html">자바 훑어보기: Run-through of Java Programming Language</title><link href="https://soonjune.github.io/Run-through-of-Java" rel="alternate" type="text/html" title="자바 훑어보기: Run-through of Java Programming Language" /><published>2020-08-10T20:00:00+09:00</published><updated>2020-08-10T20:00:00+09:00</updated><id>https://soonjune.github.io/Run-through-of-Java</id><content type="html" xml:base="https://soonjune.github.io/Run-through-of-Java">&lt;p&gt;삼성 SDS 대학생 알고리즘 특강이 시작됐다. 1주일간은 자바, 1주일 간은 C++로 배운다고 한다. 자바를 거의 안 다뤄서 Codecademy에서 자바 부분을 쭉 훑었다. 주요 내용을 정리해보고자 한다.&lt;/p&gt;

&lt;h2 id=&quot;i-introduction&quot;&gt;I. Introduction&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Class - a single concept
클래스는 객체 지향 언어에서 많이 등장하는 개념이다. 자바는 프로그램 파일명과 동일한 최소 하나의 클래스를 지녀야 한다(예: Person.java - Person 클라스). 클래스는 주로 대문자로 시작한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;main() Method
모든 자바 프로그램은 아래와 같이 main() method를 포함해야 한다.
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;Print Line
System.out.println()을 이용한다.  &lt;br /&gt;
Eclipse IDE에서는 &lt;code&gt;syso&lt;/code&gt;를 타입한 뒤 &lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;Space&lt;/kbd&gt;를 누르면 자동 완성된다.&lt;/li&gt;
      &lt;li&gt;Comments&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;Single line: &lt;code&gt;//&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Multi-line: &lt;code&gt;/*&lt;/code&gt;   &lt;code&gt;*/&lt;/code&gt;
      * ; - 코드는 &lt;code&gt;;&lt;/code&gt;로 끝나야 한다;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Compilation(javac 명령어)
프로그램을 컴파일하면 각각의 클래스들이 &lt;b&gt;.class&lt;/b&gt; 파일로 변환된다. 변환된 java byte code는 JVM에 의해 실행된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;ii-variables&quot;&gt;II. Variables&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Primitive Data Types
&lt;code&gt;int&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, byte, long, short, &lt;code&gt;double&lt;/code&gt;, float, null&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;String - use &lt;code&gt;&quot; &quot;&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;String끼리 같은지 비교는 &lt;code&gt;.equals()&lt;/code&gt; 사용&lt;/li&gt;
      &lt;li&gt;Concatenation: + 사용 =&amp;gt; new를 사용하기 때문에 매우 느리다. 따라서 List&lt;character&gt;를 사용해서 넣다 빼거나 StringBuilder를 사용하여 효율성을 높인다.&lt;/character&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Statice Typing - 변수 선언 type과 value가 다를 경우 bug 발생&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;iii-기타-빠르게-정리&quot;&gt;III. 기타 빠르게 정리&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Array(정적인 배열) / ArrayList(동적 할당 - add()와 remove() 사용)&lt;/li&gt;
  &lt;li&gt;Loop
    &lt;ul&gt;
      &lt;li&gt;for와 for-each    &lt;br /&gt;
  for는 C와 유사하고 for-each는 아래와 같이 수행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// array of numbers&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// for-each loop that prints each number in numbers&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// int num is the handle while numbers is the source array&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;  
	&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;String Methods
    &lt;ul&gt;
      &lt;li&gt;length() - 길이&lt;/li&gt;
      &lt;li&gt;concat() - 두 String 연결&lt;/li&gt;
      &lt;li&gt;equals() - 앞에서 설명. true/false 반환&lt;/li&gt;
      &lt;li&gt;indexOf() - 특정 substring의 시작 index를 반환한다. 없을 경우 -1 반환.&lt;/li&gt;
      &lt;li&gt;charAt(int index) - String의 index번째(0부터 시작) character를 반환한다. index는 0부터 length-1까지.&lt;/li&gt;
      &lt;li&gt;toUpperCase() / toLowerCase() - String의 character를 모두 대문자 / 소문자로 바꾼 값을 반환한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클래스 상속(Inheritance) - parent class / child class
    &lt;ul&gt;
      &lt;li&gt;child class는 extends로 정의 / super로 child의 속성 override&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;다형성(Polymorphism) - 하나의 메소드나 클래스가 있을 때 이것들이 다양한 방법으로 동작하는 것(아래 예시 코드 참조)
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Parent class&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The animal greets you.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Child class&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Cat&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;The cat meows.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animal1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Animal object&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cat1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Cat object&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;animal1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// prints &quot;The animal greets you.&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cat1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// prints &quot;The cat meows.&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Eclipse IDE 기능     &lt;br /&gt;
  클래스 내부에서 &lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;S&lt;/kbd&gt;를 눌러서 생성자 또는 출력 toString() 코드를 바로 생성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://codecademy-content.s3.amazonaws.com/courses/learn-java/revised-2019/access-modifiers-chart.png&quot; align=&quot;left&quot; style=&quot;width: 600px; height: 300px; padding: 0; margin: 0;&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;비교 및 sort 방법
    &lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 정의대로 정렬&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);=&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// 임의의 기준 설정&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Comparable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compareTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CustomClass&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// -1: 원하는 순서, 0: 둘이 같다, 1:원하지 않는 순서 -&amp;gt; swap&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// a에 대해 오름차순으로 정렬 &lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;// 둘이 같은 경우 b에 대해 내림차순 정렬&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>Park Seung Joon</name></author><category term="java" /><category term="algorithm" /><summary type="html">삼성 SDS 대학생 알고리즘 특강이 시작됐다. 1주일간은 자바, 1주일 간은 C++로 배운다고 한다. 자바를 거의 안 다뤄서 Codecademy에서 자바 부분을 쭉 훑었다. 주요 내용을 정리해보고자 한다.</summary></entry><entry><title type="html">1. Linear Equations in Linear Algebra (2)</title><link href="https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-2" rel="alternate" type="text/html" title="1. Linear Equations in Linear Algebra (2)" /><published>2020-08-09T21:00:00+09:00</published><updated>2020-08-09T21:00:00+09:00</updated><id>https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-2</id><content type="html" xml:base="https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-2">&lt;p&gt;선형대수 공부 2일차 - 오늘 배운 내용을 간단히 정리해보자&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&quot;&gt;
&lt;/script&gt;

&lt;h2 id=&quot;15-solution-sets-of-linear-systems&quot;&gt;1.5 Solution Sets of Linear Systems&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;homogeneous: A linear equation is called homogeneous if its constant term is zero. Such an equation has the form&lt;/li&gt;
&lt;/ul&gt;
&lt;p style=&quot;text-align: center; margin: 0; padding: 0;&quot;&gt; $$a_1x_1 + a_2x_2 + ... + a_nx_n = 0$$ &lt;/p&gt;
&lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;a_1, a_2, . . . , a_n&lt;/script&gt; are constants and &lt;script type=&quot;math/tex&quot;&gt;x_1, x_2, . . . , x_n&lt;/script&gt; are variables.
A homogeneous linear system is a linear system whose equations are all homogeneous. For example,&lt;/p&gt;
&lt;p style=&quot;text-align: center; margin: 0; padding: 0;&quot;&gt;
$$3x_1 − 9x_2 − 9x_3 − 6x_4 = 0$$
$$2x_1 − 8x_2 − 6x_3 + 2x_4 = 0$$
$$−2x_1 + 3x_2 + 8x_3 + 7x_4 = 0$$
&lt;/p&gt;

&lt;p&gt;is a homogeneous linear system.[1]&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;즉, 행렬을 사용해서 Ax = 0 꼴로 쓸 수 있으면 최소 하나의 해를 x가 영벡터인 최소 하나의 해를 가지며 이를 trivial solution이라 한다.  &lt;br /&gt;
non-trivial한 해를 갖기 위해서는 방정식이 최소 하나의 free variable을 가져야한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;16-applications-of-linear-systems&quot;&gt;1.6 Applications of Linear Systems&lt;/h2&gt;
&lt;p&gt;경제, network flow 등 다양하게 활용이 가능하다.&lt;/p&gt;

&lt;h2 id=&quot;17-linear-indepence&quot;&gt;1.7 Linear Indepence&lt;/h2&gt;
&lt;p&gt;선형 독립이라는 말이 나오며 앞서 본 방정식이 trivial solution을 가질 때 독립이라 한다.
벡터의 해가 되는 계수들이 모두 0이어야 하며 그렇지 않은 경우가 하나라도 있으면 linearly dependent하다.&lt;/p&gt;
&lt;h3 id=&quot;theorem-7-characterization-of-linearly-dependent-sets&quot;&gt;Theorem 7: Characterization of Linearly Dependent Sets&lt;/h3&gt;
&lt;p&gt;집합 S에 속한 벡터들 중 하나라도 다른 벡터의 선형 결합으로 표현할 수 있다면 linearly dependent하다.  &lt;br /&gt;
벡터를 하나씩 추가해 가면서 linearly dependent한지 여부를 확인할 수 있다. &lt;br /&gt;
추가된 벡터를 앞선 벡터들의 linear combination으로 표현할 수 있는지 확인하면 된다.&lt;/p&gt;
&lt;h3 id=&quot;theorem-8&quot;&gt;Theorem 8&lt;/h3&gt;
&lt;p&gt;If a set contains more vectors than there are entries in each vector, then the set is linearly dependent. That is, any set &lt;script type=&quot;math/tex&quot;&gt;{v_1,...,v_p}&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;R^n&lt;/script&gt; is linearly dependent if p &amp;gt; n.
즉 행렬의 열의 개수가 행의 개수보다 많다면 linearly dependent하다고 할 수 있다.  &lt;br /&gt;
그 반대 p &amp;lt; n인 경우는 상황에 따라 다르기 때문에 일반화할 수 없다.&lt;/p&gt;
&lt;h3 id=&quot;theorem-9&quot;&gt;Theorem 9&lt;/h3&gt;
&lt;p&gt;If a set S D &lt;script type=&quot;math/tex&quot;&gt;{v_1,..., v_p}&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;R^n&lt;/script&gt; contains the zero vector, then the set is linearly dependent.   &lt;br /&gt;
Zero vector가 존재하면 linearly dependent하다.&lt;/p&gt;

&lt;h2 id=&quot;18-introduction-to-linear-transformations&quot;&gt;1.8 Introduction to Linear Transformations&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_map&quot;&gt;transformation&lt;/a&gt;은 function, mapping과 같은 말이다.
&lt;script type=&quot;math/tex&quot;&gt;T: R^n -&gt; R^m&lt;/script&gt;인 linear transformation에 대하여&lt;/li&gt;
  &lt;li&gt;domain(정의역) - &lt;script type=&quot;math/tex&quot;&gt;R^n&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;codomain(공역) - &lt;script type=&quot;math/tex&quot;&gt;R^m&lt;/script&gt;&lt;/li&gt;
  &lt;li&gt;range(치역) / image - T(x)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;로 정의한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linear Transformation은 아래 두 조건을 만족해야 한다.  &lt;br /&gt;
i. T(u+v) = T(u) + T(v)    &lt;br /&gt;
ii. T(cu) = cT(u) for all scalars c   &lt;br /&gt;
위 조건으로부터 T(0) = 0이 유도된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;오늘 정리로 챕터1을 마쳤다. 중간고사도 여기까지가 범위인 것 같다. 이틀만에 중간고사 범위까지 공부해서 기분이 좋다(?).&lt;/p&gt;

&lt;p&gt;[1] 출처: http://faculty.bard.edu/~belk/math213f15/Notes10.pdf&lt;/p&gt;</content><author><name>Park Seung Joon</name></author><category term="linear-algebra" /><category term="math" /><summary type="html">선형대수 공부 2일차 - 오늘 배운 내용을 간단히 정리해보자</summary></entry><entry><title type="html">1. Linear Equations in Linear Algebra (1)</title><link href="https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-1" rel="alternate" type="text/html" title="1. Linear Equations in Linear Algebra (1)" /><published>2020-08-08T22:00:00+09:00</published><updated>2020-08-08T22:00:00+09:00</updated><id>https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-1</id><content type="html" xml:base="https://soonjune.github.io/Linear-Equations-in-Linear-Algebra-1">&lt;p&gt;오늘 선형대수 공부를 시작했다. 자료는 고려대에 계시다가 현재는 KAIST AI 대학원으로 가신 주재걸 교수님의 &lt;a href=&quot;https://www.youtube.com/watch?v=3bTr91fLHOg&amp;amp;list=PLep-kTP3NkcOBWLIfjMYymsdagnGi3XS6&quot;&gt;강의&lt;/a&gt;와 수업에 사용한 &lt;a href=&quot;https://www.amazon.com/Linear-Algebra-Its-Applications-5th/dp/032198238X&quot;&gt;교과서&lt;/a&gt;를 참고했다.
간단히 오늘 배운 내용을 정리해보자.&lt;/p&gt;

&lt;p&gt;오늘은 간단한 개요 정도였다. 요즘 교육과정에서는 행렬이 빠졌다고 하는데 구7차 교육과정에서 처음으로 등장하는 것이 행렬이었던 것 같다. 그러면 섹션별로 간단한 개념만 짚고 넘어가자.&lt;/p&gt;

&lt;h2 id=&quot;11-systems-of-linear-equations&quot;&gt;1.1 Systems of Linear Equations&lt;/h2&gt;
&lt;p&gt;1) &lt;a href=&quot;https://en.wikipedia.org/wiki/Linear_equation&quot;&gt;linear equation의 정의&lt;/a&gt; &lt;br /&gt;
=&amp;gt; 이러한 linear equation(s)의 집합을 &lt;a href=&quot;https://en.wikipedia.org/wiki/System_of_linear_equations&quot;&gt;systems of linear equations&lt;/a&gt; 라 한다.   &lt;br /&gt;
2) &lt;a href=&quot;https://en.wikipedia.org/wiki/Consistent_and_inconsistent_equations&quot;&gt;consistent&lt;/a&gt; - 하나 이상의 해가 존재하는 경우 / 그 반대로 해가 없는 경우는 inconsistent   &lt;br /&gt;
3) 선형방정식을 행렬로 나타낼 수 있다. (coefficient matrix, augmented matrix)   &lt;br /&gt;
4) linear system을 푸는 가장 기본적인 방법은 triangular form으로 만들어 주는 것이다. 이때 아래의 3가지 기본 row operation을 사용한다.&lt;br /&gt;
=&amp;gt; Replacement, Interchange, Scaling &lt;br /&gt;
세가지 row operation을 통해 만들 수 있는 행렬들은 row equivalent하다고 표현한다.&lt;/p&gt;

&lt;h2 id=&quot;12-row-reduction-and-echelon-forms&quot;&gt;1.2 Row Reduction and Echelon Forms&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/3743aca294b2e5346c167819fd9ee0bcb79ef22c&quot; align=&quot;left&quot; /&gt;    
&lt;/p&gt;

&lt;p&gt;위와 같은 모양을 지닌 행렬의 형태를 &lt;a href=&quot;https://en.wikipedia.org/wiki/Row_echelon_form&quot;&gt;echelon form&lt;/a&gt; 이라고 한다.  &lt;br /&gt;
여기서 각 행의 맨 앞의 0이 아닌 수를 leading entry라고 한다. (여기서는 1, 2, 1)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://wikimedia.org/api/rest_v1/media/math/render/svg/0cbe2a26712d3e37787d46b087e97748740b553e&quot; align=&quot;left&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;위와 같이 leading entry가 1이고 leading entry 밑뿐만 아니라 위의 원소들도 0이면 reduced echelon form이라고 부른다.&lt;/p&gt;

&lt;h3 id=&quot;theorem-1-uniqueness-of-the-reduced-echelon-form&quot;&gt;Theorem 1: Uniqueness of the Reduced Echelon Form&lt;/h3&gt;
&lt;p&gt;우선, 모든 행렬은 (reduced) echelon form으로 변환할 수 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Echelon form인 행렬의 leading entry를 pivot position이라고 한다.  &lt;br /&gt;
각 행에 pivot position이 존재하느냐의 여부에 따라이 해당 열이 basic variable인지 free variable인지 결정된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;theorem-2-existence-and-uniqueness-theorem&quot;&gt;Theorem 2: Existence and Uniqueness Theorem&lt;/h3&gt;
&lt;p&gt;Echelon form의 행렬에서 [0, …, b] 꼴로 나오는 행(b는 0이 아닌 실수)이 존재하면 해가 없다.&lt;/p&gt;

&lt;h2 id=&quot;13-vector-equations&quot;&gt;1.3 Vector Equations&lt;/h2&gt;
&lt;p&gt;교환 법칙, 결합 법칙 등이 성립한다. &lt;br /&gt;
span의 개념을 확인하자 - set of all possible linear combinations   &lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=k7RM-ot2NWY&quot;&gt;등장개념 영상&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;14-the-matrix-equation-ax--b&quot;&gt;1.4 The Matrix Equation Ax = b&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/1mgvPjG.png&quot; alt=&quot;theorem 3 and 4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;공부를 하면서 최근에 본 물리학자인 &lt;a href=&quot;https://youtu.be/8n80LX2LGjY?t=90&quot;&gt;파인만의 영상&lt;/a&gt;이 떠올랐다. 선형대수도 직관이 더해지면 더 오래 기억하고 의미있게 활용할 수 있을 것이다. 단순히 해를 구하는 것은 컴퓨터가 더 잘하니 숨겨진 의의를 찾는데 집중하면 좋을 것 같다.&lt;/p&gt;</content><author><name>Park Seung Joon</name></author><category term="linear-algebra" /><category term="math" /><summary type="html">오늘 선형대수 공부를 시작했다. 자료는 고려대에 계시다가 현재는 KAIST AI 대학원으로 가신 주재걸 교수님의 강의와 수업에 사용한 교과서를 참고했다. 간단히 오늘 배운 내용을 정리해보자.</summary></entry><entry><title type="html">SMART한 목표 설정하기</title><link href="https://soonjune.github.io/SMART-goal" rel="alternate" type="text/html" title="SMART한 목표 설정하기" /><published>2020-08-07T20:00:00+09:00</published><updated>2020-08-07T20:00:00+09:00</updated><id>https://soonjune.github.io/SMART-goal</id><content type="html" xml:base="https://soonjune.github.io/SMART-goal">&lt;p&gt;우연히 마이크로소프트에서 하는 &lt;a href=&quot;https://www.insidesherpa.com/virtual-internships/prototype/ms2CK9b2SCWGXwPMS/Engineering%3A%20Undergraduate%20%26%20Masters%20Virtual%20Internship%20Platform&quot;&gt;Virtual Intership&lt;/a&gt; 코스에 등록하게 되었다.&lt;/p&gt;

&lt;p&gt;간단하게 인턴십 소개를 들었다. 기술적인 내용을 가르친다기 보다는 마이크로소프트가 어떻게 일하고 전반적인 기술 트렌드를 소개하기 위한 프로그램이라는 느낌이 들었다. 단순한 소개인 Module 1을 마무리 하고 Module 2에서는 SMART한 목표설정을 다뤘다.&lt;/p&gt;

&lt;h3 id=&quot;smart한-목표란&quot;&gt;SMART한 목표란&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Specific
구체적이고&lt;/li&gt;
  &lt;li&gt;Measurable
측정 가능하고&lt;/li&gt;
  &lt;li&gt;Achievable
달성 가능하고&lt;/li&gt;
  &lt;li&gt;Relevant
달성해야 하는 이유가 적당하며&lt;/li&gt;
  &lt;li&gt;Time Bound
시간 제약 안에 달성해야하는 목표이다.
&lt;a href=&quot;https://www.youtube.com/watch?v=PCRSVRD2EAk&quot;&gt;소개 영상&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;맞는 말인 것 같으면서도 과정에 대한 평가가 더해졌으면 어땠을까 하는 생각이 든다.&lt;/p&gt;

&lt;p&gt;스스로도 SMART한 골을 설정해봤다. 장기적이진 않고 단기 목표이지만 일단 이렇다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;8월 15일까지 앞으로 공부할 인공지능에 필수적인 수학 공부(선형대수)를 하자. 선형대수 강의를 수강할 것이며 하루에 4강씩 수강한다. 상대적으로 쉬운 앞 부분을 빠르게 수강하면 가능할 것이라고 생각한다. 아마 하루 4시간씩 투자를 하게 될 것이다. 그날 공부한 내용을 블로그에 올리도록 하자&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;목표를 달성할 수 있게 스스로를 한번 채찍질 해보자.&lt;/p&gt;</content><author><name>Park Seung Joon</name></author><category term="personal" /><summary type="html">우연히 마이크로소프트에서 하는 Virtual Intership 코스에 등록하게 되었다.</summary></entry><entry><title type="html">Rouge 적용</title><link href="https://soonjune.github.io/rouge" rel="alternate" type="text/html" title="Rouge 적용" /><published>2020-08-05T17:00:00+09:00</published><updated>2020-08-05T17:00:00+09:00</updated><id>https://soonjune.github.io/rouge</id><content type="html" xml:base="https://soonjune.github.io/rouge">&lt;p&gt;Rouge를 이용하면 코드 부분을 highlight해서 표현할 수 있다.&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;```이용
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JavaScript is a simple language for javatpoint learners&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;~~~javascript로 열고 닫을 때
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JavaScript is a simple language for javatpoint learners&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;syntaxHighlight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;foo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;%highlight javascript %로 열고 % endhighlight % 닫을 때 중간에 코드가 들어가서 list ordering이 다시 1부터 시작하는 문제가 있었다.
마크다운 중간에 삽입하기 위해서는  &lt;br /&gt;
(1) html layout에서 아래와 같이 css style을 불러오고&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/css&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/built/syntax.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(2) 코드 블럭(Code Blocks) 추가 - ``` 혹은 ~~~ 이용
코드 첫 줄과 마지막 줄에 Back quote ( ` ) 또는 물결( ~ ) 3개 삽입해서 추가하자.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://medium.com/@vilcins/syntax-highlight-with-rouge-in-jekyll-6bf9e45f9dda&quot;&gt;https://medium.com/@vilcins/syntax-highlight-with-rouge-in-jekyll-6bf9e45f9dda&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Park Seung Joon</name></author><category term="blog" /><summary type="html">Rouge를 이용하면 코드 부분을 highlight해서 표현할 수 있다.1 https://medium.com/@vilcins/syntax-highlight-with-rouge-in-jekyll-6bf9e45f9dda &amp;#8617;</summary></entry><entry><title type="html">Blog Reopening - 블로그 운영 시작</title><link href="https://soonjune.github.io/blog-opening" rel="alternate" type="text/html" title="Blog Reopening - 블로그 운영 시작" /><published>2020-08-01T18:00:00+09:00</published><updated>2020-08-01T18:00:00+09:00</updated><id>https://soonjune.github.io/blog-opening</id><content type="html" xml:base="https://soonjune.github.io/blog-opening">&lt;!-- &lt;span class=&quot;table-of-contents-list&quot;&gt;블로그 목차 내역&lt;/span&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;./blog-opening&quot;&gt;블로그 목차 추가&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=acVpibElHZ8&amp;t=99s&quot;&gt;목차 추가시 참고 영상&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt; --&gt;

&lt;p&gt;블로그 재운영&lt;/p&gt;

&lt;p&gt;개설만 해놓고 흐지부지 됐던 블로그를 다시 운영하기로 했습니다. 공부, 일상 등 잡다한 내용을 다룰 예정입니다.
 열심히 기록을 남겨 스스로를 되돌아보고 좋은 정보도 공유하고자 합니다.&lt;/p&gt;

&lt;p&gt;블로그는 jekyll 기반의 static website이며 아래 자료를 참고했습니다. &lt;br /&gt;
&lt;a href=&quot;https://moon9342.github.io/tag/jekyll/&quot;&gt;IT Technical Training&lt;/a&gt;&lt;/p&gt;</content><author><name>Park Seung Joon</name></author><category term="blog" /><summary type="html"></summary></entry><entry><title type="html">Node.js 잇몸으로 뽀개기 (studying Node.js)</title><link href="https://soonjune.github.io/Node.js-study" rel="alternate" type="text/html" title="Node.js 잇몸으로 뽀개기 (studying Node.js)" /><published>2018-10-05T21:22:00+09:00</published><updated>2018-10-05T21:22:00+09:00</updated><id>https://soonjune.github.io/Node.js-study</id><content type="html" xml:base="https://soonjune.github.io/Node.js-study">&lt;h2 id=&quot;왜-nodejs를-공부해야하는가&quot;&gt;왜 Node.js를 공부해야하는가&lt;/h2&gt;
&lt;p&gt;Node.js의 가장 큰 장점은 방대한 npm 라이브러리다. 많은 사람들이 사용하고 있기 때문에 리소스도 풍부하고 내가 필요한 기능은 이미 다른 사람이 개발해 놓은 경우가 왕왕 있다고 한다. 일종의 네트워크 효과라고 보면 되겠다.
또 다른 장점은 입출력(I/O)을 기다리는 방식에서 볼 수 있다. Node.js는 non-blocking 방식을 택하고 있는데 이는 데이터를 주고 받는 과정 동안 멈추지 않고 다른 일을 처리하는 것을 말한다. Rails 같은 blocking 방식을 택한 경우, 입출력 하나 하나씩 기다리느라 오랜 시간이 소요된다.&lt;/p&gt;

&lt;p&gt;아래 사진을 보면 확실히 이해가 된다. Non-blocking 방식이 자원을 훨씬 효율적으로 활용하고 결과도 빨리 받아볼 수 있다.
&lt;img src=&quot;http://i.imgur.com/iSafBIF.png&quot; alt=&quot;blocking vs. nonblocking&quot; /&gt;&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2 id=&quot;nodejs란-무엇인가&quot;&gt;Node.js란 무엇인가&lt;/h2&gt;
&lt;p&gt;내가 이해한 바로는 C++로 작성한 V8 Engine을 통해서 Javascript로 작성한 코드가 Machine Code로 작동하는 것이라고 한다. Node.js를 런타임이라고 하는데 런타임 단순히 말하면 프로그래밍 언어가 구동되는 환경이라고 이해하면 된다고 한다&lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;. 명확하게 이해는 안되지만 Node.js는 자바스크립트로 작성된 코드가 실행될 수 있도록 도와주는 환경인 것 같다.&lt;/p&gt;

&lt;h2 id=&quot;향후-일정&quot;&gt;향후 일정&lt;/h2&gt;
&lt;p&gt;유데미에서 맥스와 함께 자바스크립트 공부를 차근차근 해 나간다. 궁극적으로 모바일 서버를 운영할 수 있는 실력을 갖추고 싶다.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;https://homoefficio.github.io/2017/02/19/Blocking-NonBlocking-Synchronous-Asynchronous/ &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;http://asfirstalways.tistory.com/99 &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">왜 Node.js를 공부해야하는가 Node.js의 가장 큰 장점은 방대한 npm 라이브러리다. 많은 사람들이 사용하고 있기 때문에 리소스도 풍부하고 내가 필요한 기능은 이미 다른 사람이 개발해 놓은 경우가 왕왕 있다고 한다. 일종의 네트워크 효과라고 보면 되겠다. 또 다른 장점은 입출력(I/O)을 기다리는 방식에서 볼 수 있다. Node.js는 non-blocking 방식을 택하고 있는데 이는 데이터를 주고 받는 과정 동안 멈추지 않고 다른 일을 처리하는 것을 말한다. Rails 같은 blocking 방식을 택한 경우, 입출력 하나 하나씩 기다리느라 오랜 시간이 소요된다.</summary></entry><entry><title type="html">Vue.js 개괄</title><link href="https://soonjune.github.io/Vue.js" rel="alternate" type="text/html" title="Vue.js 개괄" /><published>2018-10-05T20:38:03+09:00</published><updated>2018-10-05T20:38:03+09:00</updated><id>https://soonjune.github.io/Vue.js</id><content type="html" xml:base="https://soonjune.github.io/Vue.js">&lt;h2 id=&quot;vuejs의-componenet-개발-방식&quot;&gt;Vue.js의 Componenet 개발 방식&lt;/h2&gt;
&lt;p&gt;Vue의 컴포넌트는 모듈과 같다. 모듈이란 어플리케이션의 독립적인 한 부분이다. 모듈은 어플리케이션을 만들기 위한 부품과 비슷하다. Vue.js는 뷰-로직 모듈을 작성할 수 있도록 디자인된 라이브러리이다. 작은 모듈은 배우고, 이해하고, 유지하고, 재사용과 디버그 하는 것이 더 쉽다. 다른 개발자와 협업도 편해진다.&lt;/p&gt;

&lt;p&gt;Vue.js는 FIRST여야 한다. Focused(단일 책임 원칙), Independent(독립적인), Reusable(재사용 가능한), Small(작은), Testable(테스트 가능한). 각각의 컴포넌트는 너무 크지 않게 100라인 미만을 유지하는 것이 좋다. 또한, Vue 컴포넌트는 독립적으로 작동이 가능해야 한다.&lt;/p&gt;

&lt;p&gt;Vue.js 개발 방식의 단점은 Vue.js에서만 사용되는 문법을 익혀야 한다는 점, 이용자 커뮤니티가 작아서 활용 가능한 리소스가 작다는 점이 있다. Vue.js 개발자가 중국계 미국인이라 많은 수의 이용자가 중국인이다. 따라서 중국어를 잘 한다면 Vue.js를 더 잘 활용할 수 있을 것이다.&lt;/p&gt;

&lt;h2 id=&quot;props-와-events-emitting&quot;&gt;props 와 Events Emitting&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;props&lt;/code&gt; 컴포넌트 속성은 JavaScript 객체를 전달하는 역할을 한다. 하위 컴포넌트로 객체를 전달한다. 컴포넌트 props를 잘 사용하면 당신의 컴포넌트는 항상 작동할 것이다. 이를 방어적 프로그래밍이라고 한다.
  Events Emitting은 하위 컴포넌트에서 상위 컴포넌트의 이벤트를 발생시키는 것이다.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;출처: http://vuejs.kr/jekyll/update/2017/03/13/vuejs-component-style-guide/#%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-props%EB%A5%BC-%EC%9E%98-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0&lt;/p&gt;</content><author><name></name></author><summary type="html">Vue.js의 Componenet 개발 방식 Vue의 컴포넌트는 모듈과 같다. 모듈이란 어플리케이션의 독립적인 한 부분이다. 모듈은 어플리케이션을 만들기 위한 부품과 비슷하다. Vue.js는 뷰-로직 모듈을 작성할 수 있도록 디자인된 라이브러리이다. 작은 모듈은 배우고, 이해하고, 유지하고, 재사용과 디버그 하는 것이 더 쉽다. 다른 개발자와 협업도 편해진다.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://soonjune.github.io/welcome-to-jekyll" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-09-26T17:15:03+09:00</published><updated>2018-09-26T17:15:03+09:00</updated><id>https://soonjune.github.io/welcome-to-jekyll</id><content type="html" xml:base="https://soonjune.github.io/welcome-to-jekyll">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>